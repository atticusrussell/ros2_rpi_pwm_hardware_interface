# This config uses industrial_ci (https://github.com/ros-industrial/industrial_ci.git).
# For troubleshooting, see README (https://github.com/ros-industrial/industrial_ci/blob/master/README.rst)

name: CI Industrial

on: # this determines when this workflow is run
  push:
  #   branches: [ master, melodic-devel ] #  when master or melodic-devel branch is pushed to
  pull_request:
  #   branches: [ master ] # when there is a pull request against master
  # schedule: # uncomment to run periodically
  #  - cron: '0 4 * * *' # every day at 4 AM (UTC)
  workflow_dispatch: # allow manually starting this workflow

jobs:
  industrial_ci:
    name: ROS ${{ matrix.ROS_DISTRO }} (${{ matrix.ROS_REPO }})
    runs-on: ubuntu-latest
    strategy:
      # fail-fast: false # uncomment if failing jobs should not cancel the others immediately
      matrix: # matrix is the product of entries
        ROS_DISTRO: [humble, rolling]
        ROS_REPO: [main]
        # exclude: # specific configuration can be excludes
        #   - {ROS_DISTRO: melodic, ROS_REPO: testing}
        # include: # add additional configurations
        #   - {ROS_DISTRO: kinetic, ROS_REPO: testing}
    env:
      CCACHE_DIR: "${{ github.workspace }}/.ccache" # directory for ccache (and how we enable ccache in industrial_ci)
    steps:
      - name: Set current directory
        run: echo "CURRENT_DIR=$(pwd)" >> $GITHUB_ENV
      - name: Change to home directory
        run: cd ~
      - name: Install pigpio library
        run: |
          cd ~
          wget https://github.com/joan2937/pigpio/archive/master.zip
          unzip master.zip
          cd pigpio-master
          make
          sudo make install
      - name: See where I am
        run: |
          pwd
          ls -la
          cd ..
          ls -la
      # - name: Verify pigpio library install
      #   run: |
      #     sudo ./x_pigpio # check C I/F
      #     sudo pigpiod    # start daemon
      #     ./x_pigpiod_if2 # check C      I/F to daemon
      #     ./x_pigpio.py   # check Python I/F to daemon
      #     ./x_pigs        # check pigs   I/F to daemon
      #     ./x_pipe        # check pipe   I/F to daemon
      # - name: Go back to prev directory
      #   run: cd $CURRENT_DIR
      # - uses: actions/checkout@v3 # clone target repository
        
      # - uses: actions/cache@v2 # fetch/store the directory used by ccache before/after the ci run
      #   with:
      #     path: ${{ env.CCACHE_DIR }}
      #     # This configuration will always create a new ccache cache starting off from the previous one (if any).
      #     # In this simple version it will be shared between all builds of the same ROS_REPO and ROS_REPO
      #     # and might need some fine-tuning to match the use case
      #     key: ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-${{github.run_id}}
      #     restore-keys: |
      #       ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-
      # - uses: 'ros-industrial/industrial_ci@master' # run industrial_ci
      #   env: # either pass all entries explicitly
      #     ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
      #     ROS_REPO: ${{ matrix.ROS_REPO }}
      #   # with: # or pass the full matrix as config
      #   #    config: ${{toJSON(matrix)}}
